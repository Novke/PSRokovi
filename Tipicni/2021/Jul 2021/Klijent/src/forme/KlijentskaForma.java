/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Organizator;
import domen.Takmicar;
import domen.Takmicenje;
import domen.Ucesce;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.Komunikacija;
import konstante.Operacije;
import modeli.ModelTabeleKlijent;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

public class KlijentskaForma extends javax.swing.JFrame {

    Organizator o;

    /**
     * Creates new form Forma1
     */
    public KlijentskaForma(Organizator o) {
        initComponents();
        setLocationRelativeTo(null);
        this.o = o;
        popuniTakmicenja();
        popuniTakmicare();
        tblUcesca.setModel(new ModelTabeleKlijent());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUcesca = new javax.swing.JTable();
        btnSacuvaj = new javax.swing.JButton();
        cmbTakmicenje = new javax.swing.JComboBox();
        cmbTakmicar = new javax.swing.JComboBox();
        cmbVrstaTrke = new javax.swing.JComboBox();
        txtDatumVremePocetka = new javax.swing.JFormattedTextField();
        txtDatumVremeZavrsetka = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Unos ucesca"));

        jLabel1.setText("Takmicenje:");

        jLabel2.setText("Takmicar:");

        jLabel3.setText("Vrsta trke:");

        jLabel4.setText("Datum i vreme pocetka:");

        jLabel5.setText("Datum i vreme zavrsetka:");

        btnDodaj.setText("Dodaj ucesce");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi ucesce");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        tblUcesca.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblUcesca);

        btnSacuvaj.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        btnSacuvaj.setText("Sacuvaj ucesca");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        cmbTakmicenje.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbTakmicar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbVrstaTrke.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Maraton", "Polumaraton", "Trka zadovoljstva" }));

        txtDatumVremePocetka.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy HH:mm"))));
        txtDatumVremePocetka.setText("06.06.2021 10:00");

        txtDatumVremeZavrsetka.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy HH:mm"))));
        txtDatumVremeZavrsetka.setText("06.06.2021 17:00");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDatumVremePocetka)
                                    .addComponent(txtDatumVremeZavrsetka)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbVrstaTrke, 0, 538, Short.MAX_VALUE)
                                    .addComponent(cmbTakmicar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbTakmicenje, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 84, Short.MAX_VALUE)
                        .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(220, 220, 220))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbTakmicenje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbTakmicar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbVrstaTrke, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDatumVremePocetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDatumVremeZavrsetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnObrisi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSacuvaj))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed

        try {
            Takmicenje takmicenje = (Takmicenje) cmbTakmicenje.getSelectedItem();
            Takmicar takmicar = (Takmicar) cmbTakmicar.getSelectedItem();
            
            // proveravam pol, napravio sam niz karaktera
            // od naziva takmicenja i pretposlednji karakter
            // takmicenja mora da bude jednak polu takmicara
            String nazivTakmicenja = takmicenje.getNazivTakmicenja();
            char[] ch = new char[nazivTakmicenja.length()];
            
            for (int i = 0; i < nazivTakmicenja.length(); i++) {
                ch[i] = nazivTakmicenja.charAt(i);
            }

            if(ch[nazivTakmicenja.length() - 2] != takmicar.getPol().charAt(0)){
                JOptionPane.showMessageDialog(this, "Pol takmicara mora odgovarati polu takmicenja!");
                return;
            }
            // ovde je kraj provere za pol takmicara
            
            String vrstaTrke = (String) cmbVrstaTrke.getSelectedItem();
            
            if(!vrstaTrke.equals(takmicenje.getVrstaTrke())){
                JOptionPane.showMessageDialog(this, "Vrsta trke mora biti isto kao vrsta trke "
                        + "takmicenja! Vrsta trke takmicenja je: " + takmicenje.getVrstaTrke());
                return;
            }

            SimpleDateFormat sdfDatumVreme = new SimpleDateFormat("dd.MM.yyyy HH:mm");
            SimpleDateFormat sdfDatum = new SimpleDateFormat("dd.MM.yyyy");
            Date datumVremePocetka = sdfDatumVreme.parse(txtDatumVremePocetka.getText());
            Date datumVremeZavrsetka = sdfDatumVreme.parse(txtDatumVremeZavrsetka.getText());
            
            if(datumVremePocetka.after(datumVremeZavrsetka)){
                JOptionPane.showMessageDialog(this, "Datum vreme pocetka mora biti pre datuma "
                        + "i vremena zavrsetka!");
                return;
            }

            if (!sdfDatum.format(datumVremePocetka)
                    .equals(sdfDatum.format(takmicenje.getDatum()))) {
                JOptionPane.showMessageDialog(this, "Datum i vreme pocetka "
                        + "mora biti isti kao datum takmicenja! Datum takmicenja je: " 
                + sdfDatum.format(takmicenje.getDatum()));
                return;
            }

            Ucesce u = new Ucesce(-1, vrstaTrke, datumVremePocetka,
                    datumVremeZavrsetka, takmicenje, takmicar, o);

            ModelTabeleKlijent mt = (ModelTabeleKlijent) tblUcesca.getModel();
            mt.dodajUcesce(u);
            


        } catch (ParseException ex) {
            Logger.getLogger(KlijentskaForma.class.getName()).log(Level.SEVERE, null, ex);
        }

        //            System.out.println((int)(datumVremeZavrsetka.getTime() - datumVremePocetka.getTime())/3600000);
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int row = tblUcesca.getSelectedRow();

        if (row != -1) {
            ModelTabeleKlijent mt = (ModelTabeleKlijent) tblUcesca.getModel();
            mt.obrisiUcesce(row);
        }

    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed

        if (txtDatumVremePocetka.getText().isEmpty() || txtDatumVremeZavrsetka.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sva polja moraju biti popunjena!");
            return;
        }
        
        ModelTabeleKlijent mt = (ModelTabeleKlijent) tblUcesca.getModel();
        
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.SACUVAJ_UCESCA);
        kz.setParametar(mt.getLista());
        
        Komunikacija.getInstance().posaljiZahtev(kz);
        ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();
        
        boolean uspesno = (boolean) so.getOdgovor();
        
        if(uspesno){
            JOptionPane.showMessageDialog(this, "Uspesno sacuvano!");
        }else{
            JOptionPane.showMessageDialog(this, "Nije sacuvano!");
        }


    }//GEN-LAST:event_btnSacuvajActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cmbTakmicar;
    private javax.swing.JComboBox cmbTakmicenje;
    private javax.swing.JComboBox cmbVrstaTrke;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblUcesca;
    private javax.swing.JFormattedTextField txtDatumVremePocetka;
    private javax.swing.JFormattedTextField txtDatumVremeZavrsetka;
    // End of variables declaration//GEN-END:variables

    private void popuniTakmicare() {

        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.VRATI_TAKMICARE);

        Komunikacija.getInstance().posaljiZahtev(kz);
        ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();

        ArrayList<Takmicar> listaTakmicara = (ArrayList<Takmicar>) so.getOdgovor();

        cmbTakmicar.removeAllItems();

        for (Takmicar takmicar : listaTakmicara) {
            cmbTakmicar.addItem(takmicar);
        }

    }

    private void popuniTakmicenja() {

        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.VRATI_TAKMICENJA);

        Komunikacija.getInstance().posaljiZahtev(kz);
        ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();

        ArrayList<Takmicenje> listaTakmicenja = (ArrayList<Takmicenje>) so.getOdgovor();

        cmbTakmicenje.removeAllItems();

        for (Takmicenje takmicenje : listaTakmicenja) {
            cmbTakmicenje.addItem(takmicenje);
        }

    }
}
