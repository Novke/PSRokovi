/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Banka;
import domen.StavkaIzvestaja;
import java.util.ArrayList;
import logika.Kontroler;
import modeli.ModelTabeleServer;
import niti.OsveziNit;
import niti.PokreniServer;

/**
 *
 * @author USER
 */
public class ServerskaForma extends javax.swing.JFrame {

    /**
     * Creates new form ServerskaForma
     */
    public ServerskaForma() {
        initComponents();
        setLocationRelativeTo(null);
        popuniBanke();
        tblIzvestaj.setModel(new ModelTabeleServer());
        OsveziNit on = new OsveziNit(this);
        on.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbTip = new javax.swing.JCheckBox();
        cbBanka = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblIzvestaj = new javax.swing.JTable();
        cmbTip = new javax.swing.JComboBox();
        cmbBanka = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cbTip.setText("Tip kompanije:");

        cbBanka.setText("Banka:");

        tblIzvestaj.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblIzvestaj);

        cmbTip.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Akcionarsko drustvo", "Item 2" }));

        cmbBanka.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbTip)
                            .addComponent(cbBanka))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbTip, 0, 267, Short.MAX_VALUE)
                            .addComponent(cmbBanka, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTip)
                    .addComponent(cmbTip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbBanka)
                    .addComponent(cmbBanka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PokreniServer ps = new PokreniServer();
                ps.start();
                new ServerskaForma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbBanka;
    private javax.swing.JCheckBox cbTip;
    private javax.swing.JComboBox cmbBanka;
    private javax.swing.JComboBox cmbTip;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblIzvestaj;
    // End of variables declaration//GEN-END:variables

    public void izvrsi() {

        ArrayList<StavkaIzvestaja> listaBaza;
        String upit = "";
        ModelTabeleServer mt = (ModelTabeleServer) tblIzvestaj.getModel();

        if (cbTip.isSelected() && cbBanka.isSelected()) {
            String tip = (String) cmbTip.getSelectedItem();
            Banka b = (Banka) cmbBanka.getSelectedItem();

            upit = " WHERE k.tipKompanije = '" + tip + "' "
                    + "AND b.bankaid = '" + b.getBankaID() + "'";

            listaBaza = Kontroler.getInstance().vratiIzvestaj(upit);
            mt.dodajIzvestaj(listaBaza);

        }

        if (!cbTip.isSelected() && cbBanka.isSelected()) {
            Banka b = (Banka) cmbBanka.getSelectedItem();

            upit = " WHERE b.bankaid = '" + b.getBankaID() + "'";
            listaBaza = Kontroler.getInstance().vratiIzvestaj(upit);
            mt.dodajIzvestaj(listaBaza);

        }

        if (cbTip.isSelected() && !cbBanka.isSelected()) {
            String tip = (String) cmbTip.getSelectedItem();

            upit = " WHERE k.tipKompanije = '" + tip + "'";
            listaBaza = Kontroler.getInstance().vratiIzvestaj(upit);
            mt.dodajIzvestaj(listaBaza);
        }

        if (!cbTip.isSelected() && !cbBanka.isSelected()) {
            listaBaza = Kontroler.getInstance().vratiIzvestaj(upit);
            mt.dodajIzvestaj(listaBaza);
        }
    }

    private void popuniBanke() {
        ArrayList<Banka> listaBanki = Kontroler.getInstance().vratiBanke();

        cmbBanka.removeAllItems();
        for (Banka banka : listaBanki) {
            cmbBanka.addItem(banka);
        }
    }
}
