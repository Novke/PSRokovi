/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Intervencija;
import domen.IntervencijeSacuvaj;
import domen.Upravnik;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import komunikacija.Komunikacija;
import konstante.Operacije;
import modeli.ModelTabeleKlijent;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

public class KlijentskaForma extends javax.swing.JFrame {

    Upravnik upravnik;
    ArrayList<Intervencija> intervencijeZaCuvanje = new ArrayList<>();
    ArrayList<Intervencija> intervencijeZaIzmenu = new ArrayList<>();
    ArrayList<Intervencija> intervencijeZaBrisanje = new ArrayList<>();

    /**
     * Creates new form Forma1
     */
    public KlijentskaForma(Upravnik upravnik) {
        initComponents();
        setLocationRelativeTo(null);
        this.upravnik = upravnik;
        tblIntervencije.setModel(new ModelTabeleKlijent());
        popuniIntervencije();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblIntervencije = new javax.swing.JTable();
        btnDodaj = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblIntervencije.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblIntervencije);

        btnDodaj.setText("Dodaj intervenciju");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni intervenciju");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi intervenciju");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnSacuvaj.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        btnSacuvaj.setText("Sacuvaj intervencije");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98)
                .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(340, 340, 340))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnObrisi)
                    .addComponent(btnIzmeni)
                    .addComponent(btnDodaj))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(btnSacuvaj)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        new DodajForma(this, true).setVisible(true);
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        int row = tblIntervencije.getSelectedRow();
        if (row >= 0) {
            ModelTabeleKlijent mt = (ModelTabeleKlijent) tblIntervencije.getModel();
            Intervencija i = mt.vratiIzabranuIntervenciju(row);
            new IzmeniForma(this, true, i).setVisible(true);
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int row = tblIntervencije.getSelectedRow();
        if (row >= 0) {
            ModelTabeleKlijent mt = (ModelTabeleKlijent) tblIntervencije.getModel();
            Intervencija i = mt.vratiIzabranuIntervenciju(row);
            mt.obrisiIntervenciju(row);

//            //ako brisem intervenciju koju sam prethodno dodao
//            //moram da je izbrisem iz liste intervencijeZaCuvanje
//            for (Intervencija intervencija : intervencijeZaCuvanje) {
//                if (intervencija.equals(i)) {
//                    intervencijeZaCuvanje.remove(i);
//                    return;
//                }
//            }
            //ako brisemo novu koju smo dodali moramo da brisemo iz intervencijeZaCuvanje
            if (i.getIntervencijaID() == -1) {
                intervencijeZaCuvanje.remove(i);
                return;
            }

            //ako brisemo onu koju smo menjali, moramo da izbacimo iz intervencijeZaIzmenu
            for (Intervencija intervencija : intervencijeZaIzmenu) {
                if (intervencija.getIntervencijaID() == i.getIntervencijaID()) {
                    intervencijeZaIzmenu.remove(i);
                }
            }

            intervencijeZaBrisanje.add(i);

        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed

        IntervencijeSacuvaj intervencije
                = new IntervencijeSacuvaj(intervencijeZaCuvanje, intervencijeZaIzmenu, intervencijeZaBrisanje);

        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.SACUVAJ_IZMENE);
        kz.setParametar(intervencije);

        Komunikacija.getInstance().posaljiZahtev(kz);
        ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();

        boolean uspesno = (boolean) so.getOdgovor();

        if (uspesno) {
            JOptionPane.showMessageDialog(this, "Uspesno sacuvane izmene!");
        } else {
            JOptionPane.showMessageDialog(this, "Doslo je do greske...");
        }

    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblIntervencije;
    // End of variables declaration//GEN-END:variables

    private void popuniIntervencije() {

        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.VRATI_INTERVENCIJE_UPRAVNIKA);
        kz.setParametar(upravnik);

        Komunikacija.getInstance().posaljiZahtev(kz);
        ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();

        ArrayList<Intervencija> intervencije = (ArrayList<Intervencija>) so.getOdgovor();

        ModelTabeleKlijent mt = (ModelTabeleKlijent) tblIntervencije.getModel();
        mt.dodajIntervencije(intervencije);

    }

    void dodajIntervenciju(Intervencija i) {
        i.setUpravnik(upravnik);
        ModelTabeleKlijent mt = (ModelTabeleKlijent) tblIntervencije.getModel();
        mt.dodajIntervenciju(i);
        intervencijeZaCuvanje.add(i);
    }

    void izmeniIntervenciju(Intervencija i) {
        ModelTabeleKlijent mt = (ModelTabeleKlijent) tblIntervencije.getModel();

        if (i.getIntervencijaID() == -1) {
            JOptionPane.showMessageDialog(this, "Ne mozete menjati intervenciju koju ste sada dodali!");
            return;
        }

        mt.izmeniIntervenciju(tblIntervencije.getSelectedRow(), i);
        intervencijeZaIzmenu.add(i);
    }
}
